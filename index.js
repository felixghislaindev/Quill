
let stationAray = ['Acton Town','Acton Central','Acton Central','Aldgate','Aldgate East', 'Alperton',	
'Amersham',	
'Angel'	,
'Archway',
'Arnos Grove',
'Arsenal',	
'Baker Street',	
'Balham',
'Bank',	
'Barbican',	
'Barking',
'Barkingside',
'Barons Court',	
'Bayswater'	,
'Becontree	',
'Belsize Park',	
'Bermondsey',	
'Bethnal Green'	,
'Blackfriars',
'Blackhorse Road',
'Bond Street',
'Borough',
'Boston Manor',	
'Bounds Green',	
'Bow Road',	
'Brent Cross',
'Brixton',
'Bromley-by-Bow',	
'Brondesbury',	
'Brondesbury Park',	
'Buckhurst Hill	',
'Burnt Oak',	
'Caledonian Road',	
'Caledonian Road & Barnesbury',
'Camden Road',
'Camden Town',
'Canada Water',	
'Canary Wharf',	
'Cannon Street',	
'Canonbury',	
'Canons Park',
'Chalfont & Latimer',	
'Chalk Farm	',
'Chancery Lane',
'Charing Cross',	
'Chesham',	
'Chigwell'	,
'Chiswick Park'	,
'Chorleywood',
'City Thameslink',
'Clapham Common',	
'Clapham North'	,
'Clapham South',
'Cockfosters',	
'Colindale',	
'Colliers Wood',	
'Covent Garden'	,
'Croxley',	
'Dagenham ',
'Dagenham ',
'Dalston ',
'Debden',	
'Dollis Hill',
'Ealing Broadway',
'Ealing Common'	,
"Earl's Court",
'East Acton',	
'East Finchley',	
'East Ham'	,
'East Putney',	
'Eastcote'	,
'Edgware',
'Edgware Road (Bakerloo Line)',	
'Edgware Road (Circle Line)',	
'Elephant & Castle'	,
'Elm Park',	
'Embankment',	
'Epping',	
'Euston',	
'Euston Square'	,
'Fairlop',
'Farringdon',
'Farringdon',	
'Finchley Central',	
'Finchley Road'	,
'Finchley Road and Frognal'	,
'Finsbury Park'	,
'Fulham Broadway',
'Gants Hill',	
'Gloucester Road',
'Golders Green'	,
'Goldhawk Road',
'Goodge Street'	,
'Gospel Oak',
'Grange Hill',
'Great Portland Street',
'Greenford'	,
'Gunnersbury	',
'Green Park',	
'Hackney Central	',
'Hackney Wick',
'Hainault'	,
'Hammersmith (Dist&Picc Line)',	
'Hammersmith (H&C Line)',	
'Hampstead',
'Hampstead Heath	',
'Hanger Lane	',
'Harlesden'	,
'Harrow & Wealdstone	',
'Harrow-on-the-Hill',	
'Hatton Cross',
'Heathrow Terminals ',
'Heathrow Terminal' ,
'Hendon Central',
'High Barnet	',
'High Street Kensington	',
'Highbury & Islington',	
'Highgate',	
'Hillingdon',		
'Holborn',
'Holland ',
'Holloway Roda',
'Homerton',	
'Hornchurch',	
'Hounslow Central',	
'Hounslow East'	,
'Hounslow West',
'Hyde Park Corner',
'Ickenham'	,
'Kennington',
'Kensal Green',
'Kensal Rise',
'Kensington (Olympia)',	
'Kentish Town',	
'Kentish Town West',	
'Kenton',	
'Kew Gardens',
'Kilburn	',
'Kilburn Park',
"King's Cross St.Pancras",
"King's Cross Thameslink",	
'Kingsbury',	
'Knightsbridge',	
'Ladbroke Grove',	
'Lambeth North',		
'Lancaster Gate',	
'Latimer Road',
'Leicester Square',
'Leyton',	
'Leytonstone',
'Liverpool Street',	
'London Bridge'	,
'Loughton',	
'Maida Vale',	
'Manor House',
'Mansion House',
'Marble Arch',
'Marylebone',	
'Mile End',
'Mill Hill East',
'Monument',	
'Moor Park',
'Moorgate',	
'Morden	',
'Mornington Crescent',
'Neasden',
'New Cross'	,
'New Cross Gate',	
'Newbury Park',	
'North Acton',
'North Ealing'	,
'North Greenwich',
'North Harrow',	
'North Wembley',
'Northfields',	
'Northolt',	
'Northolt',
'Northwick Park',	
'Northwood'	,
'Northwood Hills',
'Notting Hill Gate',
'Oakwood',	
'Old Street',	
'Osterley',	
'Oval',	
'Oxford Circus',
'Paddington',	
'Paddington',
'Park Royal',
'Parsons Green',	
'Perivale',
'Piccadilly Circus',
'Pimlico',
'Pinner',
'Plaistow',
'Preston Road',
'Putney Bridge',
"Queen's Park",
'Queensbury',
'Queensway',
'Ravenscourt Park',
'Rayners Lane',
'Redbridge',
"Regent's Park",
'Richmond',
'Richmond',
'Rickmansworth',
'Roding Valley',
'Rotherhithe',
'Royal Oak',
'Ruislip',	
'Ruislip Gardens',	
'Ruislip Manor'	,
'Russell Square',	
"St.James's Park",
'Seven Sisters'	,
'Shadwell',	
"Shepherd's Bush",
"Shepherd's Bush Market",	
'Sloane Square'	,
'Snaresbrook	',
'South Acton,	',
'South Ealing',
'South Harrow',	
'South Kensington',	
'South Kenton',
'South Ruislip',
'South Wimbledon',
'South Woodford',
'Southfields',
'Southgate',
'Southwark',
"St.John's Wood",
"St.Paul's",
'Stamford Brook',
'Stanmore',	
'Stepney Green',	
'Stockwell'	,
'Stonebridge Park',	
'Stratford',	
'Stratford'	,
'Sudbury Hill',	
'Sudbury Town',	
'Surrey Quays',	
'Swiss Cottage',	
'Temple',	
'Theydon Bois',	
'Tooting Bec',	
'Tooting Broadway',	
'Tottenham Court Road',	
'Tottenham Court Road',	
'Tottenham Hale	',
'Totteridge & Whetstone',
'Tower Hill',	
'Tufnell Park',
'Turnham Green',
'Turnpike Lane',
'Upminster',
'Upminster',
'Upney',
'Upton Park',	
'Uxbridge',
'Vauxhall',	
'Victoria',	
'Wanstead',	
'Wapping',	
'Warren Street',	
'Warwick Avenue',	
'Waterloo',	
'Wembley Central',
'Wembley Park',	
'West Acton',	
'West Brompton',
'West Finchley'	,
'West Ham',	
'West Hampstead',	
'West Hampstead',	
'West Hampstead',	
'West Hampstead',	
'West Harrow',
'West Kensington',
'West Ruislip'	,
'Westbourne Park',
'Westminster',	
'White City',	
'Whitechapel',	
'Willesden Green',
'Willesden ',
'Willesden',
'Wimbledon',	
'Wimbledon Park',	
'Wood Green',	
'Woodford',	
'Woodside Park']



let stations = []
for(let i = 0; i < stationAray.length; i++){
    stations.push(stationAray[i].toLocaleLowerCase())
}


let alphabet = [...'abcdefghijklmnopqrstuvwxyz']

let finalStations = []

function checkStations() {
  let stationsHash = stations.map(station => {
    let alphaCount = 0
    for (let letter of alphabet) {
      if (station.toLowerCase().includes(letter)) alphaCount++
    } 
    
    return {
      station,
      alphaCount,
    }
  }).sort((a, b) => b.alphaCount - a.alphaCount)
  stations = stations.filter(station => station !== stationsHash[0].station)
  finalStations.push(stationsHash[0].station)
  alphabet = alphabet.filter(letter => !stationsHash[0].station.includes(letter))
  if (alphabet.length > 0) checkStations() 
  else console.log(finalStations)
}

checkStations()

const stationss = finalStations.toString()
const stationToLower=  stationss.toLowerCase()
const stationsArray = stationToLower.split(' ')
const alphabets = 'abcdefghijklmnopqrstuvwxyz'


let counter = 0

for (var i = 0; i < alphabets.length; i++) {
    var letter = alphabets[i]; 
    if (stationToLower.indexOf(letter) > -1)
    counter++;
}
if (counter == 26)
console.log(`There are ${counter} letters and the set of sation is ${finalStations}`);
else{
    console.log(`found ${counter}`)
}
//so i have first converted the array in to a lowerscase array to the remove the case sensitivity
//then made a alphabet array and used map and a for loop to make an array of objects which had the station name and the number of letters from the alphabet.
//I then sorted that array so that the station with the greatest number of alphabet letters is first.
//I then pushed the name of that station to the final array .
//I then removed the letters it contains from the alphabet array.
//and removed the station from the stations array
//and then recursively repeat the process until the alphabet is empty

